# -*- mode: bash-ts; -*-

zmodload zsh/zprof
# Emacs tramp mode compatibility
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return
[[ $TERM == "tramp" ]] && unsetopt zle && PS1='[\u@\h \w]$ ' && return

# quick escape/command mode
bindkey jk vi-cmd-mode

function ediff() {
    if [ "X$2" = "X" ]; then
        echo "USAGE: ediff <FILE 1> <FILE 2>"
    else
        # The --eval flag takes lisp code and evaluates it with EMACS
        emacsclient -r --eval "(ediff-files \"$1\" \"$2\")"
    fi
}

if [[ "$INSIDE_EMACS" = 'vterm' ]] &&
    [[ -n ${EMACS_VTERM_PATH} ]] &&
    [[ -f ${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh ]]; then
    source ${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh

    ff() {
        vterm_cmd find-file "$(realpath "${@:-.}")"
    }

    msg() {
        vterm_cmd message "%s" "$*"
    }

fi

# similar to https://github.com/edenhill/kafkacat/issues/209 to make kafkacat happy
ulimit -n 2048

# Plugins
## autojump:
source /opt/homebrew/opt/autojump/etc/autojump.sh

## fzf:
source /opt/homebrew/opt/fzf/shell/completion.zsh 2> /dev/null
source /opt/homebrew/opt/fzf/shell/key-bindings.zsh

# Bindings

## Emacs
bindkey -e

if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
  function zle-line-init() {
    echoti smkx
  }
  function zle-line-finish() {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish
fi

## Fuzzy find history forward/backward
# Start typing + [Up-Arrow] - fuzzy find history forward
if [[ -n "${terminfo[kcuu1]}" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search

  bindkey -M emacs "${terminfo[kcuu1]}" up-line-or-beginning-search
  bindkey -M viins "${terminfo[kcuu1]}" up-line-or-beginning-search
  bindkey -M vicmd "${terminfo[kcuu1]}" up-line-or-beginning-search
fi

# Start typing + [Down-Arrow] - fuzzy find history backward
if [[ -n "${terminfo[kcud1]}" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search

  bindkey -M emacs "${terminfo[kcud1]}" down-line-or-beginning-search
  bindkey -M viins "${terminfo[kcud1]}" down-line-or-beginning-search
  bindkey -M vicmd "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# Control+Backspace key combination, which is represented by ^?
# bindkey '^?' backward-kill-word

bindkey '^[[1;3D' backward-word # alt-f
bindkey '^[[1;3C' forward-word  # alt-b

# Edit the current command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

# disable the gpg zsh as I'm not using it from shell
# GPG zsh
export GPG_TTY=$TTY

# Fix for passphrase prompt on the correct tty
# See https://www.gnupg.org/documentation/manuals/gnupg/Agent-Options.html#option-_002d_002denable_002dssh_002dsupport
 function _gpg-agent_update-tty_preexec {
   gpg-connect-agent updatestartuptty /bye &>/dev/null
 }
 autoload -U add-zsh-hook
 add-zsh-hook preexec _gpg-agent_update-tty_preexec

# load aliases
test -e ~/.aliases && source ~/.aliases

eval "$(starship init zsh)"

# chime
# eval "$(rbenv init -)"

zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|=*' 'l:|=* r:|=*'
unset CASE_SENSITIVE HYPHEN_INSENSITIVE
autoload -Uz compinit && compinit
