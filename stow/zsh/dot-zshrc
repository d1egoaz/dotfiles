# -*- mode: bash-ts; -*-

# History settings
HISTSIZE=10000
SAVEHIST=10000

# Load zsh profiling (if needed)
zmodload zsh/zprof

# Handle dumb/tramp terminals gracefully
if [[ $TERM == "dumb" ]]; then
  unsetopt zle
  PS1='$ '
  return
fi
if [[ $TERM == "tramp" ]]; then
  unsetopt zle
  PS1='[\u@\h \w]$ '
  return
fi

# Interactive keybindings
bindkey jk vi-cmd-mode

# --- Interactive Functions ---
# ediff: Launches Emacs ediff between two files.
ediff() {
  if [ -z "$2" ]; then
    echo "Usage: ediff <FILE1> <FILE2>"
  else
    emacsclient -r --eval "(ediff-files \"$1\" \"$2\")"
  fi
}

# Emacs vterm integration (if inside Emacs and vterm available)
if [[ "$INSIDE_EMACS" = "vterm" ]] &&
   [[ -n ${EMACS_VTERM_PATH} ]] &&
   [[ -f "${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh" ]]; then
  source "${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh"

  ff() {
    vterm_cmd find-file "$(realpath "${@:-.}")"
  }

  msg() {
    vterm_cmd message "%s" "$*"
  }
fi

# Increase file descriptor limit (helpful for some tools)
ulimit -n 2048

# --- Plugins and Completions ---
# autojump plugin
source "${DEVBOX_PACKAGES_DIR}/share/autojump/autojump.zsh" 2>/dev/null

# fzf
source "${DEVBOX_PACKAGES_DIR}/share/fzf/completion.zsh" 2>/dev/null
source "${DEVBOX_PACKAGES_DIR}/share/fzf/key-bindings.zsh" 2>/dev/null
source "${DEVBOX_PACKAGES_DIR}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"

# Use Emacs keybindings in zsh
bindkey -e

# Terminal alternate mode initialization (for some key sequences)
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
  zle-line-init() { echoti smkx; }
  zle-line-finish() { echoti rmkx; }
  zle -N zle-line-init
  zle -N zle-line-finish
fi

# Fuzzy history search (using up/down arrows)
if [[ -n "${terminfo[kcuu1]}" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey -M emacs "${terminfo[kcuu1]}" up-line-or-beginning-search
  bindkey -M viins "${terminfo[kcuu1]}" up-line-or-beginning-search
  bindkey -M vicmd "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
if [[ -n "${terminfo[kcud1]}" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey -M emacs "${terminfo[kcud1]}" down-line-or-beginning-search
  bindkey -M viins "${terminfo[kcud1]}" down-line-or-beginning-search
  bindkey -M vicmd "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# Alt-key bindings for word navigation
bindkey '^[[1;3D' backward-word
bindkey '^[[1;3C' forward-word

# Bind Ctrl-x Ctrl-e to edit the current command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

# GPG: set TTY and update agent on each command execution
export GPG_TTY=$TTY
_gpg-agent_update-tty_preexec() {
  gpg-connect-agent updatestartuptty /bye &>/dev/null
}
autoload -U add-zsh-hook
add-zsh-hook preexec _gpg-agent_update-tty_preexec

# Source aliases if they exist
[ -e ~/.aliases ] && source ~/.aliases

# Initialize the Starship prompt
eval "$(starship init zsh)"

# Set up advanced completion options
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' matcher-list \
  'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' \
  'r:|=*' 'l:|=* r:|=*'
unset CASE_SENSITIVE HYPHEN_INSENSITIVE
autoload -Uz compinit && compinit

# fzf-tab plugin for enhanced tab completion (if installed)
source ~/.fzf-tab/fzf-tab.plugin.zsh

# Direnv integration for automatic environment variable management
eval "$(direnv hook zsh)"
