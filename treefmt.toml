# The formatter multiplexer - https://github.com/numtide/treefmt

# Do not exit with error if a configured formatter is missing
# Env $TREEFMT_ALLOW_MISSING_FORMATTER
# allow-missing-formatter = true

# The file into which a cpu profile will be written
# Env $TREEFMT_CPU_PROFILE
# cpu-profile = ./cpu.pprof

# Exclude files or directories matching the specified globs
# Env $TREEFMT_EXCLUDES
# excludes = ["*.md", "*.gif"]

# Exit with error if any changes were made during execution
# Useful for CI
# Env $TREEFMT_FAIL_ON_CHANGE
# fail-on-change = true

# A list of formatters to apply
# Defaults to all configured formatters
# Env $TREEFMT_FORMATTERS
# formatters = ["" ""]

# Log paths that did not match any formatters at the specified log level
# Possible values are <debug|info|warn|error|fatal>
# Env $TREEFMT_ON_UNMATCHED
# on-unmatched = "info"

# The root directory from which treefmt will start walking the filesystem
# Defaults to the root of the current git worktree.
# If not in a git repo, defaults to the directory containing the config file.
# Env $TREEFMT_TREE_ROOT
# tree-root = "/tmp/foo"

# File to search for to find the tree root (if tree-root is not set)
# Env $TREEFMT_TREE_ROOT_FILE
# tree-root-file = ".git/config"

# Command to run to find the tree root. It is parsed using shlex, to allow quoting arguments that contain whitespace.
# If you wish to pass arguments containing quotes, you should use nested quotes e.g. "'" or '"'
# Env $TREEFMT_TREE_ROOT_CMD
# tree-root-cmd = "git rev-parse --show-toplevel"

# Set the verbosity of logs
# 0 = warn, 1 = info, 2 = debug
# Env $TREEFMT_VERBOSE
# verbose = 2

# The method used to traverse the files within the tree root
# Currently, we support 'auto', 'git' or 'filesystem'
# Env $TREEFMT_WALK
# walk = "filesystem"

[formatter.nixformatter.nixfmt-rfc-style]
command = "nixfmt"
includes = ["*.nix"]

# [formatter.shellcheck]
# command = "shellcheck"
# includes = ["*.sh", "*.bash", "*.envrc", "*.envrc.*"]

# [formatter.shfmt]
# command = "shfmt"
# includes = ["*.sh", "*.bash", "*.envrc", "*.envrc.*"]
# options = ["-s", "-w", "-i", "2"]

# [formatter.yamlfmt]
# command = "yamlfmt"
# includes = ["*.yaml", "*.yml"]
